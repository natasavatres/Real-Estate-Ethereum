/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.verisec.realestateeth.forms;

import com.verisec.realestateeth.controller.Controller;
import com.verisec.realestateeth.domain.RealEstate;
import com.verisec.realestateeth.domain.User;
import com.verisec.realestateeth.table.model.RealEstateTableModel;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Natasa Vatres
 */
public class FBuyer extends javax.swing.JFrame {

    /**
     * Creates new form FBuyer
     */
    public FBuyer() {
        initComponents();
    }

    User currentUser;

    public FBuyer(User user) {
        initComponents();
        centerForm();
        currentUser = user;
        populateTableRealEstates(user);
//        setColumnSizes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTblRealEstates = new javax.swing.JTable();
        jBttnBuy = new javax.swing.JButton();
        jBttnCheckOffers = new javax.swing.JButton();
        jBttnCheckHistory = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Purchase real estate");

        jLabel2.setText("Available real estates:");

        jTblRealEstates.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTblRealEstates);

        jBttnBuy.setText("Buy");
        jBttnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnBuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBttnBuy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBttnBuy))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jBttnCheckOffers.setText("Check your offers");
        jBttnCheckOffers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnCheckOffersActionPerformed(evt);
            }
        });

        jBttnCheckHistory.setText("Check ownership history");
        jBttnCheckHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnCheckHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jBttnCheckHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(351, 351, 351)
                        .addComponent(jBttnCheckOffers, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBttnCheckOffers)
                    .addComponent(jBttnCheckHistory))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBttnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnBuyActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTblRealEstates.getSelectedRow();
        if (selectedRow >= 0) {
            String ownerAddress = (String) jTblRealEstates.getValueAt(selectedRow, 0);
            String reAddress = (String) jTblRealEstates.getValueAt(selectedRow, 1);
            int area = (int) jTblRealEstates.getValueAt(selectedRow, 2);
            int distance = (int) jTblRealEstates.getValueAt(selectedRow, 3);
            int price = (int) jTblRealEstates.getValueAt(selectedRow, 4);

            RealEstate realEstate = new RealEstate(selectedRow + 1, ownerAddress, reAddress, area, distance, price);

            JFrame fSetOffer = new FSetOffer(currentUser, realEstate);
            fSetOffer.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(null, "Please select real estate!");
        }
    }//GEN-LAST:event_jBttnBuyActionPerformed

    private void jBttnCheckOffersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnCheckOffersActionPerformed
        // TODO add your handling code here:
        JFrame fCBO = new FCheckBuyerOffers(currentUser);
        fCBO.setVisible(true);
    }//GEN-LAST:event_jBttnCheckOffersActionPerformed

    private void jBttnCheckHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnCheckHistoryActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTblRealEstates.getSelectedRow();
        if (selectedRow >= 0) {
            
            FOwnershipHistory fOwnershipHistory = new FOwnershipHistory(currentUser, selectedRow);
            fOwnershipHistory.setVisible(true);
            
        } else {
            JOptionPane.showMessageDialog(null, "Please select real estate!");
        }
    }//GEN-LAST:event_jBttnCheckHistoryActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBttnBuy;
    private javax.swing.JButton jBttnCheckHistory;
    private javax.swing.JButton jBttnCheckOffers;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTblRealEstates;
    // End of variables declaration//GEN-END:variables

    private void centerForm() {
        setLocationRelativeTo(null);
    }

    Controller controller = new Controller();

    private void populateTableRealEstates(User user) {
        try {
            List<RealEstate> realEstates = controller.getAllRealEstates(user);

            List<RealEstate> filteredListRealEstates = filterListForBuyerView(realEstates);

            RealEstateTableModel realEstateTableModel = new RealEstateTableModel(filteredListRealEstates);
            jTblRealEstates.setModel(realEstateTableModel);

            realEstateTableModel.refreshTable();

        } catch (Exception ex) {
            System.out.println("Error in populating table with real estates");
        }
    }

    private List<RealEstate> filterListForBuyerView(List<RealEstate> realEstates) {

        List<RealEstate> filtered = new ArrayList<>();

        int index;
        for (int i = 0; i < realEstates.size(); i++) {
            index = -1;
            for (int j = i + 1; j < realEstates.size(); j++) {
                if (realEstates.get(i).getRealEstateAddress().equals(realEstates.get(j).getRealEstateAddress())) {
                    index = i;
                }
            }
            if (index == -1) {
                filtered.add(realEstates.get(i));
            }
        }

        return filtered;
    }

    private void setColumnSizes() {
        jTblRealEstates.getColumnModel().getColumn(0).setPreferredWidth(250);
        jTblRealEstates.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTblRealEstates.getColumnModel().getColumn(2).setPreferredWidth(50);
        jTblRealEstates.getColumnModel().getColumn(3).setPreferredWidth(100);
        jTblRealEstates.getColumnModel().getColumn(4).setPreferredWidth(80);
    }

}
