/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.verisec.realestateeth.forms;

import com.verisec.realestateeth.controller.Controller;
import com.verisec.realestateeth.domain.Offer;
import com.verisec.realestateeth.domain.User;
import com.verisec.realestateeth.table.model.BuyerOffersTableModel;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

/**
 *
 * @author Natasa Vatres
 */
public class FCheckBuyerOffers extends javax.swing.JFrame {

    /**
     * Creates new form FCheckBuyerOffers
     */
    public FCheckBuyerOffers() {
        initComponents();
    }

    User currentUser;
    Controller controller = new Controller();
    List<Offer> allOffers;

    public FCheckBuyerOffers(User user) {
        initComponents();
        currentUser = user;
        centerForm();
        populateTableCheckBuyerOffers(user);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblBuyerOffers = new javax.swing.JTable();
        jBttnPay = new javax.swing.JButton();
        jBttnDelete = new javax.swing.JButton();
        jBttnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Check your offers");

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel1.setText("Your offers");

        jTblBuyerOffers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTblBuyerOffers);

        jBttnPay.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jBttnPay.setText("Pay");
        jBttnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnPayActionPerformed(evt);
            }
        });

        jBttnDelete.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jBttnDelete.setText("Delete");
        jBttnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnDeleteActionPerformed(evt);
            }
        });

        jBttnBack.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jBttnBack.setText("Back");
        jBttnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBttnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBttnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(213, 213, 213)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBttnPay)
                        .addGap(30, 30, 30)
                        .addComponent(jBttnDelete))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jBttnBack)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBttnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnBackActionPerformed
        // TODO add your handling code here:
        FBuyer fBuyer = new FBuyer(currentUser);
        fBuyer.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_jBttnBackActionPerformed

    private void jBttnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnPayActionPerformed
        // TODO add your handling code here
        String contractAddress;
        int selectedRow = jTblBuyerOffers.getSelectedRow();

        BuyerOffersTableModel buyerOfferTableModel = (BuyerOffersTableModel) jTblBuyerOffers.getModel();

        if (selectedRow >= 0) {
            try {
                Offer currentOffer = allOffers.get(selectedRow);

                if (!allOffers.get(selectedRow).getStatus().equals("OfferAccepted")) {
                    JOptionPane.showMessageDialog(this, "Offer still not accepted!");
                    return;
                }

                controller.payRealEstate(currentOffer, currentUser);

                JOptionPane.showMessageDialog(null, "Successfully payed and changed ownership!");
                allOffers.remove(selectedRow);
                controller.deleteContract(currentOffer.getContractAddress());
                buyerOfferTableModel.refreshTable();

            } catch (Exception ex) {
                System.out.println("Error in paying for real estate");
                JOptionPane.showMessageDialog(this, "Error in paying for real estate!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select offer!");
        }
    }//GEN-LAST:event_jBttnPayActionPerformed

    private void jBttnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnDeleteActionPerformed
        // TODO add your handling code here:
        String contractAddress;
        int selectedRow = jTblBuyerOffers.getSelectedRow();

        BuyerOffersTableModel buyerOfferTableModel = (BuyerOffersTableModel) jTblBuyerOffers.getModel();

        if (selectedRow >= 0) {
            try {
                contractAddress = allOffers.get(selectedRow).getContractAddress();
                controller.acceptOffer(contractAddress, currentUser);

                JOptionPane.showMessageDialog(this, "Offer deleted!");
                allOffers.remove(selectedRow);

                controller.deleteContract(contractAddress);

                buyerOfferTableModel.refreshTable();

            } catch (Exception ex) {
                System.out.println("Error in deleting offer");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select offer to delete!");
        }
    }//GEN-LAST:event_jBttnDeleteActionPerformed

    private void centerForm() {
        setLocationRelativeTo(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBttnBack;
    private javax.swing.JButton jBttnDelete;
    private javax.swing.JButton jBttnPay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTblBuyerOffers;
    // End of variables declaration//GEN-END:variables

    private void populateTableCheckBuyerOffers(User user) {
        try {
            allOffers = controller.getAllBuyerOffers(user);
            TableModel tm = new BuyerOffersTableModel(allOffers);
            jTblBuyerOffers.setModel(tm);
        } catch (Exception ex) {
            System.out.println("Error in populating table with all offers for buyer");
        }

    }
}
