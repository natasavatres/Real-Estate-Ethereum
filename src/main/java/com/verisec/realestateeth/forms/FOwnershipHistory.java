/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.verisec.realestateeth.forms;

import com.verisec.realestateeth.controller.Controller;
import com.verisec.realestateeth.domain.RealEstate;
import com.verisec.realestateeth.domain.User;
import com.verisec.realestateeth.table.model.RealEstateTableModel;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Natasa Vatres
 */
public class FOwnershipHistory extends javax.swing.JFrame {

    /**
     * Creates new form FOwnershipHistory
     */
    public FOwnershipHistory() {
        initComponents();
    }

    Controller controller = new Controller();
    User currentUser;
    int realEstateID;

    FOwnershipHistory(User user, int id) {
        initComponents();
        currentUser = user;
        realEstateID = id;
        populateTableOwnershipHistory(id);
        centerForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTblOwnershipHistory = new javax.swing.JTable();
        jBttnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ownership history");

        jTblOwnershipHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblOwnershipHistory.setEnabled(false);
        jScrollPane1.setViewportView(jTblOwnershipHistory);

        jBttnBack.setText("Back");
        jBttnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jBttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBttnBack)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBttnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jBttnBackActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBttnBack;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTblOwnershipHistory;
    // End of variables declaration//GEN-END:variables

    private void populateTableOwnershipHistory(int id) {
        try {
            List<RealEstate> realEstates = controller.getAllRealEstates(currentUser);
            List<RealEstate> ownershipHistoryList = filterHistoryListForBuyerView(realEstates, id);

            RealEstateTableModel realEstateTableModel = new RealEstateTableModel(ownershipHistoryList);
            jTblOwnershipHistory.setModel(realEstateTableModel);

        } catch (Exception ex) {
            Logger.getLogger(FOwnershipHistory.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private List<RealEstate> filterHistoryListForBuyerView(List<RealEstate> realEstates, int id) {
        List<RealEstate> filtered = new ArrayList<>();

        for (int i = 0; i < realEstates.size(); i++) {
            if (realEstates.get(id - 1).getRealEstateAddress().equals(realEstates.get(i).getRealEstateAddress())) {
                filtered.add(realEstates.get(i));
            }
        }
        return filtered;
    }

    private void centerForm() {
        setLocationRelativeTo(null);

    }
}
